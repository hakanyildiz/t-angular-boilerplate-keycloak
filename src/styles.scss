// Imports sytyles for ng select components
@import "~@ng-select/ng-select/themes/material.theme.css";
// Custom Material Design Theme
@import '~@angular/material/theming';
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$hakke-app-primary: mat-palette($mat-indigo);
$hakke-app-accent: mat-palette($mat-pink, A200, A100, A400);
// The warn palette is optional (defaults to red).
$hakke-app-warn: mat-palette($mat-red);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as `color` or `typography`.
$hakke-app-theme: mat-light-theme(( color: ( primary: $hakke-app-primary, accent: $hakke-app-accent, warn: $hakke-app-warn, ))); // Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($hakke-app-theme);
// Hakke Theme Configurations
$primary: mat-palette($mat-blue);
$accent: mat-palette($mat-pink, A200, A100, A400);
$warn: mat-palette($mat-red);
$theme: mat-light-theme($primary, $accent, $warn);
@include angular-material-theme($theme);
$dark-primary: mat-palette($mat-blue-grey);
$dark-accent: mat-palette($mat-amber, A200, A100, A400);
$dark-warn: mat-palette($mat-deep-orange);
$dark-theme: mat-dark-theme($dark-primary, $dark-accent, $dark-warn);
// Include the alternative theme styles inside of a block with a CSS class. You can make this
// CSS class whatever you want. In this example, any component inside of an element with
// `.unicorn-dark-theme` will be affected by this alternate dark theme instead of the default theme.
.unicorn-dark-theme {
    @include angular-material-theme($dark-theme);
}


/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: Roboto, "Helvetica Neue", sans-serif;
}

.color.primary {
    color: mat-color($primary);
}

.color.warn {
    color: mat-color($warn);
}

.color.accent {
    color: mat-color($accent);
}


/****** FLEX LAYOUT ******/

.layout.horizontal,
.layout.horizontal-reverse,
.layout.vertical,
.layout.vertical-reverse {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

.layout.inline {
    display: -ms-inline-flexbox;
    display: -webkit-inline-flex;
    display: inline-flex;
}

.layout.horizontal {
    -ms-flex-direction: row;
    -webkit-flex-direction: row;
    flex-direction: row;
}

.layout.horizontal-reverse {
    -ms-flex-direction: row-reverse;
    -webkit-flex-direction: row-reverse;
    flex-direction: row-reverse;
}

.layout.vertical {
    -ms-flex-direction: column;
    -webkit-flex-direction: column;
    flex-direction: column;
}

.layout.vertical-reverse {
    -ms-flex-direction: column-reverse;
    -webkit-flex-direction: column-reverse;
    flex-direction: column-reverse;
}

.layout.wrap {
    -ms-flex-wrap: wrap;
    -webkit-flex-wrap: wrap;
    flex-wrap: wrap;
}

.layout.no-wrap {
    -ms-flex-wrap: nowrap;
    -webkit-flex-wrap: nowrap;
    flex-wrap: nowrap;
}

.layout.wrap-reverse {
    -ms-flex-wrap: wrap-reverse;
    -webkit-flex-wrap: wrap-reverse;
    flex-wrap: wrap-reverse;
}

.flex-auto {
    -ms-flex: 1 1 auto;
    -webkit-flex: 1 1 auto;
    flex: 1 1 auto;
}

.flex-none {
    -ms-flex: none;
    -webkit-flex: none;
    flex: none;
}

.flex,
.flex-1 {
    -ms-flex: 1;
    -webkit-flex: 1;
    flex: 1;
}

.flex-2 {
    -ms-flex: 2;
    -webkit-flex: 2;
    flex: 2;
}

.flex-3 {
    -ms-flex: 3;
    -webkit-flex: 3;
    flex: 3;
}

.flex-4 {
    -ms-flex: 4;
    -webkit-flex: 4;
    flex: 4;
}

.flex-5 {
    -ms-flex: 5;
    -webkit-flex: 5;
    flex: 5;
}

.flex-6 {
    -ms-flex: 6;
    -webkit-flex: 6;
    flex: 6;
}

.flex-7 {
    -ms-flex: 7;
    -webkit-flex: 7;
    flex: 7;
}

.flex-8 {
    -ms-flex: 8;
    -webkit-flex: 8;
    flex: 8;
}

.flex-9 {
    -ms-flex: 9;
    -webkit-flex: 9;
    flex: 9;
}

.flex-10 {
    -ms-flex: 10;
    -webkit-flex: 10;
    flex: 10;
}

.flex-11 {
    -ms-flex: 11;
    -webkit-flex: 11;
    flex: 11;
}

.flex-12 {
    -ms-flex: 12;
    -webkit-flex: 12;
    flex: 12;
}


/* alignment in cross axis */

.layout.start {
    -ms-flex-align: start;
    -webkit-align-items: flex-start;
    align-items: flex-start;
}

.layout.center,
.layout.center-center {
    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: center;
}

.layout.end {
    -ms-flex-align: end;
    -webkit-align-items: flex-end;
    align-items: flex-end;
}


/* alignment in main axis */

.layout.start-justified {
    -ms-flex-pack: start;
    -webkit-justify-content: flex-start;
    justify-content: flex-start;
}

.layout.center-justified,
.layout.center-center {
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
}

.layout.end-justified {
    -ms-flex-pack: end;
    -webkit-justify-content: flex-end;
    justify-content: flex-end;
}

.layout.around-justified {
    -ms-flex-pack: around;
    -webkit-justify-content: space-around;
    justify-content: space-around;
}

.layout.justified {
    -ms-flex-pack: justify;
    -webkit-justify-content: space-between;
    justify-content: space-between;
}


/* self alignment */

.self-start {
    -ms-align-self: flex-start;
    -webkit-align-self: flex-start;
    align-self: flex-start;
}

.self-center {
    -ms-align-self: center;
    -webkit-align-self: center;
    align-self: center;
}

.self-end {
    -ms-align-self: flex-end;
    -webkit-align-self: flex-end;
    align-self: flex-end;
}

.self-stretch {
    -ms-align-self: stretch;
    -webkit-align-self: stretch;
    align-self: stretch;
}

.flex-grow-1 {
    flex-grow: 1;
}

.invisible {
    display: none;
    visibility: hidden;
    height: 0;
    width: 0;
}

.form {
    display: flex;
    padding-top: 6px;
}

.mat-form-field {
    font-size: 16px;
    flex-grow: 1;
}

.disable-pointer-events {
    pointer-events: none;
}